#!/usr/bin/env bash

# Proxmox Server Setup Script
# Author: Daniel Brunod
# License: MIT
# This script is used for setting up a Proxmox server from scratch

header_info() {
  clear
  cat <<"EOF"

 ██████╗██████╗  █████╗ ███████╗████████╗███████╗
██╔════╝██╔══██╗██╔══██╗██╔════╝╚══██╔══╝╚══███╔╝
██║     ██████╔╝███████║█████╗     ██║     ███╔╝ 
██║     ██╔══██╗██╔══██║██╔══╝     ██║    ███╔╝  
╚██████╗██║  ██║██║  ██║██║        ██║   ███████╗
 ╚═════╝╚═╝  ╚═╝╚═╝  ╚═╝╚═╝        ╚═╝   ╚══════╝                                              
          
      After Install Script for Proxmox
            by Daniel Brunod

read -p "Press Enter to continue..."

EOF
}

# Colors for messages
RD=$(echo "\033[01;31m")
YW=$(echo "\033[33m")
GN=$(echo "\033[1;92m")
CL=$(echo "\033[m")
BFR="\\r\\033[K"
HOLD="-"
CM="${GN}✓${CL}"
CROSS="${RD}✗${CL}"

# Set script to exit on error and inherit the error flags
set -euo pipefail
shopt -s inherit_errexit nullglob

# Message functions
msg_info() {
  local msg="$1"
  echo -ne " ${HOLD} ${YW}${msg}..."
}

msg_ok() {
  local msg="$1"
  echo -e "${BFR} ${CM} ${GN}${msg}${CL}"
}

msg_error() {
  local msg="$1"
  echo -e "${BFR} ${CROSS} ${RD}${msg}${CL}"
}

# Function to update and upgrade Proxmox
update_proxmox() {
  msg_info "Updating Proxmox VE"
  apt update && apt upgrade -y &>/dev/null
  msg_ok "Proxmox VE Updated"
  echo ""
  read -p "Press Enter to continue..."
}

# Function to modify repositories
modify_repos() {
  local pve_repo_file="/etc/apt/sources.list"
  local enterprise_repo_file="/etc/apt/sources.list.d/pve-enterprise.list"
  local ceph_repo_file="/etc/apt/sources.list.d/ceph.list"

  msg_info "Checking existing repository configuration"

  # Display current repository configuration
  echo "Current Proxmox Repositories:"
  grep -E '^deb' $pve_repo_file || echo "No repositories found in $pve_repo_file"

  echo "Enterprise Repositories:"
  grep -E '^deb' $enterprise_repo_file || echo "No repositories found in $enterprise_repo_file"

  echo "Ceph Repositories:"
  grep -E '^deb' $ceph_repo_file || echo "No repositories found in $ceph_repo_file"

  echo ""
  read -p "Press Enter to continue..."

  CHOICE=$(whiptail --backtitle "Proxmox Server Setup" --title "Repository Configuration" --menu "Choose an action:" 15 60 4 \
  "1" "Switch to Non-Production Repositories" \
  "2" "Switch to Enterprise Repositories" \
  "3" "Exit to menu" 3>&2 2>&1 1>&3)

  case $CHOICE in
    1)
      msg_info "Switching to Non-Production Repositories"

      # Backup current repository files
      cp $pve_repo_file ${pve_repo_file}.bak
      cp $enterprise_repo_file ${enterprise_repo_file}.bak
      cp $ceph_repo_file ${ceph_repo_file}.bak
      msg_ok "Backup created for repository files"

      # Add non-production repositories if not already present
      if ! grep -q '^deb http://download.proxmox.com/debian/pve bookworm pve-no-subscription' $pve_repo_file; then
        echo -e "\n# NOT recommended for production use" >> $pve_repo_file
        echo "deb http://download.proxmox.com/debian/pve bookworm pve-no-subscription" >> $pve_repo_file
        msg_ok "Added Proxmox non-production repository"
      fi

      if ! grep -q '^deb http://download.proxmox.com/debian/ceph-quincy bookworm no-subscription' $pve_repo_file; then
        echo -e "\n# Not for production ceph" >> $pve_repo_file
        echo "deb http://download.proxmox.com/debian/ceph-quincy bookworm no-subscription" >> $pve_repo_file
        msg_ok "Added Ceph non-production repository"
      fi

      # Disable enterprise repositories by commenting out specific lines
      sed -i 's|^deb https://enterprise.proxmox.com/debian/pve|#deb https://enterprise.proxmox.com/debian/pve|' $enterprise_repo_file
      sed -i 's|^deb https://enterprise.proxmox.com/debian/ceph|#deb https://enterprise.proxmox.com/debian/ceph|' $ceph_repo_file

      msg_ok "Switched to Non-Production Repositories"
      echo ""
      read -p "Press Enter to continue..."
      ;;
    2)
      msg_info "Switching to Enterprise Repositories"

      # Disable non-production repositories
      sed -i 's|^deb http://download.proxmox.com/debian/pve|#deb http://download.proxmox.com/debian/pve|' $pve_repo_file
      sed -i 's|^deb http://download.proxmox.com/debian/ceph-quincy|#deb http://download.proxmox.com/debian/ceph-quincy|' $pve_repo_file

      # Enable enterprise repositories
      sed -i 's|^#deb https://enterprise.proxmox.com/debian/pve|deb https://enterprise.proxmox.com/debian/pve|' $enterprise_repo_file
      sed -i 's|^#deb https://enterprise.proxmox.com/debian/ceph|deb https://enterprise.proxmox.com/debian/ceph|' $ceph_repo_file

      msg_ok "Switched to Enterprise Repositories"
      echo ""
      read -p "Press Enter to continue..."
      ;;
    3)
      msg_info "Returning to the main menu"
      ;;
  esac
}

# Main menu loop
main_menu() {
  while true; do
    CHOICE=$(whiptail --backtitle "Proxmox Server Setup" --title "Main Menu" --menu "Choose an option:" 15 60 4 \
    "1" "Update and Upgrade Proxmox" \
    "2" "Modify DNS Configuration" \
    "3" "Modify Repositories" \
    "4" "Exit" 3>&2 2>&1 1>&3)

    case $CHOICE in
      1)
        update_proxmox
        ;;
      2)
        modify_dns
        ;;
      3)
        modify_repos
        ;;
      4)
        clear
        exit 0
        ;;
      *)
        echo "Invalid option, please select again."
        ;;
    esac
  done
}

# Start the script
header_info
main_menu
